"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configTrees = void 0;
const node_fs_1 = __importDefault(require("node:fs"));
const path_1 = __importDefault(require("path"));
const config_node_1 = require("../../config-node");
const util_1 = require("../util");
exports.configTrees = {
    key: 'config-trees',
    description: 'From config tree directories (a.k.a. Volume mounted ConfigMaps/Secrets)',
    priority: 6000,
    get: (key, providerCache) => {
        if (util_1.protectedKeys.includes(key)) {
            return;
        }
        let configtrees = (0, config_node_1.lookupConfig)('config.node.config.trees');
        if (!configtrees) {
            return;
        }
        configtrees = Array.isArray(configtrees) ? configtrees : [configtrees];
        return (0, util_1.computeIfAbsent)(providerCache, `configtree:${key}`, () => {
            for (var configtree of configtrees) {
                const configtreeEntry = path_1.default.join(configtree, key);
                if (node_fs_1.default.existsSync(configtreeEntry)) {
                    return (0, util_1.unquote)(node_fs_1.default.readFileSync(configtreeEntry, 'utf8'));
                }
            }
        });
    },
};
//# sourceMappingURL=6000-config-trees.js.map