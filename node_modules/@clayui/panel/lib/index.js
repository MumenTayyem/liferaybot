"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _button = _interopRequireDefault(require("@clayui/button"));

var _icon = _interopRequireDefault(require("@clayui/icon"));

var _provider = require("@clayui/provider");

var _shared = require("@clayui/shared");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _reactTransitionGroup = require("react-transition-group");

var _Body = _interopRequireDefault(require("./Body"));

var _Footer = _interopRequireDefault(require("./Footer"));

var _Group = _interopRequireDefault(require("./Group"));

var _Header = _interopRequireDefault(require("./Header"));

var _Title = _interopRequireDefault(require("./Title"));

var _excluded = ["children", "className", "collapsable", "collapseClassNames", "collapseHeaderClassNames", "defaultExpanded", "displayTitle", "displayType", "expanded", "onExpandedChange", "showCollapseIcon", "size", "spritemap"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ClayPanel(_ref) {
  var _classNames;

  var children = _ref.children,
      className = _ref.className,
      collapsable = _ref.collapsable,
      collapseClassNames = _ref.collapseClassNames,
      collapseHeaderClassNames = _ref.collapseHeaderClassNames,
      _ref$defaultExpanded = _ref.defaultExpanded,
      defaultExpanded = _ref$defaultExpanded === void 0 ? false : _ref$defaultExpanded,
      displayTitle = _ref.displayTitle,
      displayType = _ref.displayType,
      expanded = _ref.expanded,
      onExpandedChange = _ref.onExpandedChange,
      _ref$showCollapseIcon = _ref.showCollapseIcon,
      showCollapseIcon = _ref$showCollapseIcon === void 0 ? true : _ref$showCollapseIcon,
      size = _ref.size,
      spritemap = _ref.spritemap,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var _useControlledState = (0, _shared.useControlledState)({
    defaultName: 'defaultExpanded',
    defaultValue: defaultExpanded,
    handleName: 'onExpandedChange',
    name: 'expanded',
    onChange: onExpandedChange,
    value: expanded
  }),
      _useControlledState2 = _slicedToArray(_useControlledState, 2),
      internalExpanded = _useControlledState2[0],
      setInternalExpanded = _useControlledState2[1];

  var _useProvider = (0, _provider.useProvider)(),
      prefersReducedMotion = _useProvider.prefersReducedMotion;

  var ariaControlsId = (0, _shared.useId)();
  return /*#__PURE__*/_react.default.createElement("div", _extends({}, otherProps, {
    className: (0, _classnames.default)('panel', className, (_classNames = {}, _defineProperty(_classNames, "panel-".concat(displayType), displayType), _defineProperty(_classNames, "panel-".concat(size), size), _classNames))
  }), !collapsable && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, displayTitle && ( /*#__PURE__*/_react.default.isValidElement(displayTitle) ? displayTitle : /*#__PURE__*/_react.default.createElement(_Header.default, null, /*#__PURE__*/_react.default.createElement("span", {
    className: "panel-title"
  }, displayTitle))), children), collapsable && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_button.default, {
    "aria-controls": ariaControlsId,
    "aria-expanded": internalExpanded,
    className: (0, _classnames.default)('panel-header panel-header-link', collapseHeaderClassNames, {
      'collapse-icon': showCollapseIcon,
      'collapse-icon-middle': showCollapseIcon,
      collapsed: !internalExpanded,
      show: internalExpanded
    }),
    displayType: "unstyled",
    onClick: function onClick() {
      return setInternalExpanded(!internalExpanded);
    }
  }, displayTitle && ( /*#__PURE__*/_react.default.isValidElement(displayTitle) ? displayTitle : /*#__PURE__*/_react.default.createElement("span", {
    className: "panel-title"
  }, displayTitle)), showCollapseIcon && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
    className: "collapse-icon-closed"
  }, /*#__PURE__*/_react.default.createElement(_icon.default, {
    spritemap: spritemap,
    symbol: "angle-right"
  })), /*#__PURE__*/_react.default.createElement("span", {
    className: "collapse-icon-open"
  }, /*#__PURE__*/_react.default.createElement(_icon.default, {
    spritemap: spritemap,
    symbol: "angle-down"
  })))), /*#__PURE__*/_react.default.createElement(_reactTransitionGroup.CSSTransition, {
    "aria-labelledby": ariaControlsId,
    className: (0, _classnames.default)('panel-collapse', collapseClassNames, {
      collapse: !internalExpanded
    }),
    classNames: {
      enter: 'collapsing',
      enterActive: "show",
      enterDone: 'show',
      exit: "show",
      exitActive: 'collapsing'
    },
    id: ariaControlsId,
    in: internalExpanded,
    onEnter: function onEnter(element) {
      return (0, _shared.setElementFullHeight)(element);
    },
    onEntered: function onEntered(element) {
      element.style.height = '';
    },
    onExit: function onExit(element) {
      return (0, _shared.setElementFullHeight)(element);
    },
    onExiting: function onExiting(element) {
      element.style.height = '';
    },
    role: "region",
    timeout: !prefersReducedMotion ? 250 : 0
  }, /*#__PURE__*/_react.default.createElement("div", null, children))));
}

ClayPanel.Body = _Body.default;
ClayPanel.Group = _Group.default;
ClayPanel.Footer = _Footer.default;
ClayPanel.Header = _Header.default;
ClayPanel.Title = _Title.default;
var _default = ClayPanel;
exports.default = _default;