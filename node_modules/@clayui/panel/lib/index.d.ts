/**
 * SPDX-FileCopyrightText: Â© 2019 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import { InternalDispatch } from '@clayui/shared';
import React from 'react';
import ClayPanelBody from './Body';
import ClayPanelFooter from './Footer';
import ClayPanelGroup from './Group';
import ClayPanelHeader from './Header';
import ClayPanelTitle from './Title';
export interface IProps extends React.HTMLAttributes<HTMLDivElement> {
    /**
     * Flag to indicate that Panel is collapsable.
     */
    collapsable?: boolean;
    /**
     * Adds classes to the collapse element. Only when `collapsable` is true.
     */
    collapseClassNames?: string;
    /**
     * Adds classes to the collapse header element. Only when `collapsable` is true.
     */
    collapseHeaderClassNames?: string;
    /**
     * Flag to indicate the initial value of expanded (uncontrolled).
     */
    defaultExpanded?: boolean;
    /**
     * Content to display in Panel Title.
     */
    displayTitle?: React.ReactNode;
    /**
     * Flag to indicate the visual variation of the Panel.
     */
    displayType?: 'block' | 'default' | 'secondary' | 'unstyled';
    /**
     * Determines if menu is expanded or not (controlled).
     */
    expanded?: boolean;
    /**
     * Callback for when dropdown changes its active state (controlled).
     */
    onExpandedChange?: InternalDispatch<boolean>;
    /**
     * Flag to toggle collapse icon visibility when `collapsable` is true.
     */
    showCollapseIcon?: boolean;
    /**
     * Flag to indicate the visual variation of the Panel.
     */
    size?: 'lg' | 'sm';
    /**
     * Path to spritemap for clay icons
     */
    spritemap?: string;
}
declare function ClayPanel(props: IProps): JSX.Element & {
    Body: typeof ClayPanelBody;
    Footer: typeof ClayPanelFooter;
    Group: typeof ClayPanelGroup;
    Header: typeof ClayPanelHeader;
    Title: typeof ClayPanelTitle;
};
declare namespace ClayPanel {
    var Body: ({ children, className, ...otherProps }: React.HTMLAttributes<HTMLDivElement>) => JSX.Element;
    var Group: ({ children, className, fluid, fluidFirst, fluidLast, flush, small, ...otherProps }: import("./Group").IProps) => JSX.Element;
    var Footer: ({ children, className, ...otherProps }: React.HTMLAttributes<HTMLDivElement>) => JSX.Element;
    var Header: ({ children, className, ...otherProps }: React.HTMLAttributes<HTMLDivElement>) => JSX.Element;
    var Title: ({ children, className, ...otherProps }: React.HTMLAttributes<HTMLDivElement>) => JSX.Element;
}
export default ClayPanel;
