"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VerticalBar = VerticalBar;

var _shared = require("@clayui/shared");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _Bar = require("./Bar");

var _Content = require("./Content");

var _Item = require("./Item");

var _Panel = require("./Panel");

var _context = require("./context");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function VerticalBar(_ref) {
  var _ref$absolute = _ref.absolute,
      absolute = _ref$absolute === void 0 ? false : _ref$absolute,
      _ref$activation = _ref.activation,
      activation = _ref$activation === void 0 ? 'manual' : _ref$activation,
      active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      _ref$defaultActive = _ref.defaultActive,
      defaultActive = _ref$defaultActive === void 0 ? null : _ref$defaultActive,
      _ref$defaultPanelWidt = _ref.defaultPanelWidth,
      defaultPanelWidth = _ref$defaultPanelWidt === void 0 ? 320 : _ref$defaultPanelWidt,
      onActiveChange = _ref.onActiveChange,
      onPanelWidthChange = _ref.onPanelWidthChange,
      externalPanelWidth = _ref.panelWidth,
      _ref$panelWidthMax = _ref.panelWidthMax,
      panelWidthMax = _ref$panelWidthMax === void 0 ? 500 : _ref$panelWidthMax,
      _ref$panelWidthMin = _ref.panelWidthMin,
      panelWidthMin = _ref$panelWidthMin === void 0 ? 280 : _ref$panelWidthMin,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? 'right' : _ref$position,
      _ref$resize = _ref.resize,
      resize = _ref$resize === void 0 ? false : _ref$resize;

  var _useControlledState = (0, _shared.useControlledState)({
    defaultName: 'defaultItems',
    defaultValue: defaultActive,
    handleName: 'onActiveChange',
    name: 'active',
    onChange: onActiveChange,
    value: active
  }),
      _useControlledState2 = _slicedToArray(_useControlledState, 2),
      activePanel = _useControlledState2[0],
      setActivePanel = _useControlledState2[1];

  var id = (0, _shared.useId)();

  var _React$useState = _react.default.useState(null),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      panelNext = _React$useState2[0],
      setPanelNext = _React$useState2[1];

  var _useControlledState3 = (0, _shared.useControlledState)({
    defaultName: 'defaultPanelWidth',
    defaultValue: defaultPanelWidth,
    handleName: 'onPanelWidthChange',
    name: 'panelWidth',
    onChange: onPanelWidthChange,
    value: externalPanelWidth
  }),
      _useControlledState4 = _slicedToArray(_useControlledState3, 2),
      panelWidth = _useControlledState4[0],
      setPanelWidth = _useControlledState4[1];

  return /*#__PURE__*/_react.default.createElement("div", {
    className: (0, _classnames.default)('c-slideout c-slideout-shown', className, {
      'c-slideout-absolute': absolute,
      'c-slideout-end': position === 'right',
      'c-slideout-fixed': !absolute,
      'c-slideout-start sidenav-start': position === 'left'
    })
  }, /*#__PURE__*/_react.default.createElement(_context.VerticalBarContext.Provider, {
    value: {
      activation: activation,
      activePanel: activePanel,
      id: "".concat(id, "-verticalbar"),
      onActivePanel: setActivePanel,
      onPanelWidthChange: setPanelWidth,
      panelNext: panelNext,
      panelWidth: panelWidth,
      panelWidthMax: panelWidthMax,
      panelWidthMin: panelWidthMin,
      position: position,
      resize: resize,
      setPanelNext: setPanelNext
    }
  }, children));
}

VerticalBar.Bar = _Bar.Bar;
VerticalBar.Content = _Content.Content;
VerticalBar.Item = _Item.Item;
VerticalBar.Panel = _Panel.Panel;