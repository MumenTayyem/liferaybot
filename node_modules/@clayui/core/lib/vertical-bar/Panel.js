"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Panel = Panel;

var _provider = require("@clayui/provider");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireWildcard(require("react"));

var _reactTransitionGroup = require("react-transition-group");

var _Content = require("./Content");

var _Resizer = require("./Resizer");

var _context = require("./context");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * SPDX-FileCopyrightText: Â© 2022 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
function useIsFirstRender() {
  var isFirst = (0, _react.useRef)(true);

  if (isFirst.current) {
    isFirst.current = false;
    return true;
  }

  return isFirst.current;
}

function Panel(_ref) {
  var children = _ref.children,
      _ref$keyValue = _ref.keyValue,
      keyValue = _ref$keyValue === void 0 ? null : _ref$keyValue,
      tabIndex = _ref.tabIndex;

  var _useContext = (0, _react.useContext)(_context.VerticalBarContext),
      activePanel = _useContext.activePanel,
      id = _useContext.id,
      onActivePanel = _useContext.onActivePanel,
      panelNext = _useContext.panelNext,
      panelWidth = _useContext.panelWidth,
      panelWidthMax = _useContext.panelWidthMax,
      panelWidthMin = _useContext.panelWidthMin,
      resize = _useContext.resize;

  var _useContext2 = (0, _react.useContext)(_Content.ContentContext),
      displayType = _useContext2.displayType;

  var nodeRef = (0, _react.useRef)(null);
  var previousActivePanelRef = (0, _react.useRef)(null);

  var _useProvider = (0, _provider.useProvider)(),
      prefersReducedMotion = _useProvider.prefersReducedMotion;

  var isFirst = useIsFirstRender();

  var isPanelOpen = function isPanelOpen() {
    if (isFirst) {
      return activePanel !== null;
    } else if (previousActivePanelRef.current === activePanel) {
      return true;
    } else if (activePanel === null) {
      return false;
    } else {
      return previousActivePanelRef.current !== null;
    }
  };

  (0, _react.useEffect)(function () {
    previousActivePanelRef.current = activePanel;
  }, [activePanel]);
  return /*#__PURE__*/_react.default.createElement(_reactTransitionGroup.CSSTransition, {
    "aria-labelledby": "".concat(id, "-tab-").concat(keyValue),
    className: (0, _classnames.default)('sidebar', {
      'c-slideout-show': isPanelOpen(),
      'sidebar-dark-l2': displayType === 'dark',
      'sidebar-light': displayType === 'light'
    }),
    classNames: {
      enter: panelNext ? undefined : 'c-slideout-transition c-slideout-transition-in',
      enterActive: 'c-slideout-show',
      enterDone: 'c-slideout-show',
      exit: panelNext ? undefined : 'c-slideout-transition c-slideout-transition-out'
    },
    id: "".concat(id, "-tabpanel-").concat(keyValue),
    in: activePanel === keyValue,
    nodeRef: nodeRef,
    onExited: function onExited() {
      onActivePanel(panelNext);
    },
    role: "tabpanel",
    tabIndex: tabIndex,
    timeout: panelNext || prefersReducedMotion ? 0 : {
      enter: 300,
      exit: 200
    },
    unmountOnExit: true
  }, /*#__PURE__*/_react.default.createElement("div", {
    ref: nodeRef,
    style: {
      width: panelWidth
    }
  }, children, resize && /*#__PURE__*/_react.default.createElement(_Resizer.Resizer, {
    "aria-controls": "".concat(id, "-tabpanel-").concat(keyValue),
    "aria-orientation": "vertical",
    "aria-valuemax": panelWidthMax,
    "aria-valuemin": panelWidthMin,
    "aria-valuenow": panelWidth,
    className: "c-horizontal-resizer",
    nodeRef: nodeRef
  })));
}