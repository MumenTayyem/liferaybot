/**
 * SPDX-FileCopyrightText: Â© 2023 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
interface IProps<T> extends React.HTMLAttributes<HTMLLIElement> {
    /**
     * Flag to indicate if item is active.
     * @deprecated since version 3.94.0 - uses the `active` property on the
     * root component.
     */
    active?: boolean;
    /**
     * The contents of the component.
     */
    children?: React.ReactNode;
    /**
     * Link href for item.
     */
    href?: string;
    /**
     * Property to inform the dynamic data of the tree.
     */
    items?: Array<T>;
    /**
     * Internal property.
     * @ignore
     */
    keyValue?: React.Key;
    /**
     * Internal property.
     * @ignore
     */
    textValue?: string;
    /**
     * Internal property.
     * @ignore
     */
    index?: number;
    /**
     * Internal property for compatibility with old version.
     * @ignore
     * @deprecated
     */
    initialExpanded?: boolean;
}
export declare function Item<T extends object>({ active: depreactedActive, children, href, index: _, initialExpanded, items, keyValue, onClick, textValue: _textValue, ...otherProps }: IProps<T>): JSX.Element;
export declare namespace Item {
    var displayName: string;
}
export {};
