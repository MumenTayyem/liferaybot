/**
 * SPDX-FileCopyrightText: Â© 2023 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import Button from '@clayui/button';
import { InternalDispatch } from '@clayui/shared';
import React from 'react';
import { Item } from './Item';
import type { ChildrenFunction } from '../collection';
declare const Trigger: ({ children, className, ...otherProps }: React.ComponentProps<typeof Button>) => JSX.Element;
declare type Props<T extends Record<string, any> | string> = {
    /**
     * Flag to define which item has the active state/current page.
     */
    active?: React.Key;
    /**
     * Flag to indicate the navigation behavior in the menu.
     *
     * - manual - it will just move the focus and menu activation is done just
     * by pressing space or enter.
     * - automatic - moves the focus to the menuitem and activates the menu.
     */
    activation?: 'manual' | 'automatic';
    /**
     * The component contents.
     */
    children?: React.ReactNode | ChildrenFunction<T, null>;
    /**
     * Flag to activate the Decorator variation.
     */
    decorated?: boolean;
    /**
     * Property to set the initial value of `expandedKeys` (uncontrolled).
     */
    defaultExpandedKeys?: Set<React.Key>;
    /**
     * The currently expanded keys in the collection (controlled).
     */
    expandedKeys?: Set<React.Key>;
    /**
     * Flag to define if the item represents the current page. Disable this
     * attribute only if there are multiple navigations on the page.
     */
    itemAriaCurrent?: boolean;
    /**
     * Property to inform the dynamic data of the tree.
     */
    items?: Array<T>;
    /**
     * Flag to indicate if `menubar-vertical-expand-lg` class is applied.
     */
    large?: boolean;
    /**
     * A callback that is called when items are expanded or collapsed
     * (controlled).
     */
    onExpandedChange?: InternalDispatch<Set<React.Key>>;
    /**
     * Path to the spritemap that Icon should use when referencing symbols.
     */
    spritemap?: string;
    /**
     * Custom component that will be displayed on mobile resolutions that
     * toggles the visibility of the navigation.
     */
    trigger?: typeof Trigger;
    /**
     * Label of the button that appears on smaller resolutions to open the
     * vertical navigation.
     */
    triggerLabel?: string;
};
declare function VerticalNav<T extends Record<string, any> | string>(props: Props<T>): JSX.Element & {
    Trigger: typeof Trigger;
    Item: typeof Item;
};
declare namespace VerticalNav {
    var Item: typeof import("./Item").Item;
    var Trigger: ({ children, className, ...otherProps }: import("@clayui/button/lib/Button").IProps & React.RefAttributes<HTMLButtonElement>) => JSX.Element;
}
export { VerticalNav };
