/**
 * SPDX-FileCopyrightText: Â© 2022 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
import type { CollectionState, ICollectionProps, Props } from './types';
declare type ItemLoc = {
    prevKey?: React.Key;
    nextKey?: React.Key;
};
export declare function useCollection<T extends Record<string, any> | string | number, P = unknown, K = unknown>({ children, connectNested, exclude, filter, filterKey, forceDeepRootUpdate, itemContainer: ItemContainer, items, notFound, parentKey, passthroughKey, publicApi, suppressTextValueWarning, virtualizer, visibleKeys, }: ICollectionProps<T, P> & Props<P, K>): CollectionState;
export declare function useCollectionKeys(): React.MutableRefObject<Map<React.Key, ItemLoc>>;
export {};
