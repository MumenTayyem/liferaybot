"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Collection = Collection;

var _react = _interopRequireWildcard(require("react"));

var _useCollection = require("./useCollection");

var _useVirtual = require("./useVirtual");

var _excluded = ["as", "children", "connectNested", "estimateSize", "exclude", "filter", "filterKey", "itemContainer", "items", "parentKey", "parentRef", "passthroughKey", "publicApi"],
    _excluded2 = ["as", "children", "collection", "connectNested", "estimateSize", "exclude", "filter", "filterKey", "isLoading", "itemContainer", "items", "onLoadMore", "parentKey", "parentRef", "passthroughKey", "publicApi", "suppressTextValueWarning", "virtualize"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function VirtualDynamicCollection(_ref) {
  var as = _ref.as,
      children = _ref.children,
      connectNested = _ref.connectNested,
      _ref$estimateSize = _ref.estimateSize,
      estimateSize = _ref$estimateSize === void 0 ? 37 : _ref$estimateSize,
      exclude = _ref.exclude,
      filter = _ref.filter,
      filterKey = _ref.filterKey,
      itemContainer = _ref.itemContainer,
      items = _ref.items,
      parentKey = _ref.parentKey,
      parentRef = _ref.parentRef,
      passthroughKey = _ref.passthroughKey,
      publicApi = _ref.publicApi,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  var virtualizer = (0, _useVirtual.useVirtual)({
    estimateSize: estimateSize,
    items: items,
    parentRef: parentRef
  });
  var state = (0, _useCollection.useCollection)({
    children: children,
    connectNested: connectNested,
    exclude: exclude,
    filter: filter,
    filterKey: filterKey,
    itemContainer: itemContainer,
    items: items,
    parentKey: parentKey,
    passthroughKey: passthroughKey,
    publicApi: publicApi,
    virtualizer: virtualizer
  });
  var As = as !== null && as !== void 0 ? as : _react.default.Fragment;
  return /*#__PURE__*/_react.default.createElement(As, _extends({}, otherProps, {
    style: {
      height: "".concat(state.size, "px"),
      position: 'relative',
      width: '100%'
    }
  }), state.collection);
}

function DynamicCollection(_ref2) {
  var children = _ref2.children,
      connectNested = _ref2.connectNested,
      exclude = _ref2.exclude,
      filter = _ref2.filter,
      filterKey = _ref2.filterKey,
      itemContainer = _ref2.itemContainer,
      items = _ref2.items,
      parentKey = _ref2.parentKey,
      passthroughKey = _ref2.passthroughKey,
      publicApi = _ref2.publicApi,
      suppressTextValueWarning = _ref2.suppressTextValueWarning;
  var state = (0, _useCollection.useCollection)({
    children: children,
    connectNested: connectNested,
    exclude: exclude,
    filter: filter,
    filterKey: filterKey,
    itemContainer: itemContainer,
    items: items,
    parentKey: parentKey,
    passthroughKey: passthroughKey,
    publicApi: publicApi,
    suppressTextValueWarning: suppressTextValueWarning
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, state.collection);
}

function Collection(_ref3) {
  var as = _ref3.as,
      children = _ref3.children,
      collection = _ref3.collection,
      connectNested = _ref3.connectNested,
      estimateSize = _ref3.estimateSize,
      exclude = _ref3.exclude,
      filter = _ref3.filter,
      filterKey = _ref3.filterKey,
      isLoading = _ref3.isLoading,
      itemContainer = _ref3.itemContainer,
      items = _ref3.items,
      onLoadMore = _ref3.onLoadMore,
      parentKey = _ref3.parentKey,
      parentRef = _ref3.parentRef,
      _ref3$passthroughKey = _ref3.passthroughKey,
      passthroughKey = _ref3$passthroughKey === void 0 ? true : _ref3$passthroughKey,
      publicApi = _ref3.publicApi,
      suppressTextValueWarning = _ref3.suppressTextValueWarning,
      _ref3$virtualize = _ref3.virtualize,
      virtualize = _ref3$virtualize === void 0 ? false : _ref3$virtualize,
      otherProps = _objectWithoutProperties(_ref3, _excluded2);

  var containerRef = (0, _react.useRef)(null);
  var isVirtual = collection === null || collection === void 0 ? void 0 : collection.virtualize;
  var Container = as ? as : isVirtual ? 'div' : _react.default.Fragment;
  var onScroll = (0, _react.useCallback)(function (event) {
    var target = event.target;

    if (target.scrollTop + target.clientHeight >= target.scrollHeight - 40 && !isLoading) {
      onLoadMore();
    }
  }, [onLoadMore, isLoading]);
  (0, _react.useEffect)(function () {
    if (onLoadMore && containerRef.current) {
      var element = containerRef.current.parentElement;
      element.addEventListener('scroll', onScroll, true);
      return function () {
        element.removeEventListener('scroll', onScroll, true);
      };
    }
  }, [onScroll]);
  var content;

  if (collection) {
    content = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, collection.collection);
  } else if (virtualize && children instanceof Function && items && parentRef) {
    return /*#__PURE__*/_react.default.createElement(VirtualDynamicCollection, _extends({}, otherProps, {
      as: as,
      connectNested: connectNested,
      estimateSize: estimateSize,
      itemContainer: itemContainer,
      items: items,
      parentKey: parentKey,
      parentRef: parentRef,
      passthroughKey: passthroughKey,
      publicApi: publicApi,
      suppressTextValueWarning: suppressTextValueWarning
    }), children);
  } else {
    content = /*#__PURE__*/_react.default.createElement(DynamicCollection, {
      connectNested: connectNested,
      exclude: exclude,
      filter: filter,
      filterKey: filterKey,
      itemContainer: itemContainer,
      items: items,
      parentKey: parentKey,
      passthroughKey: passthroughKey,
      publicApi: publicApi,
      suppressTextValueWarning: suppressTextValueWarning
    }, children);
  }

  var virtualProps = isVirtual ? {
    style: {
      height: "".concat(collection.size, "px"),
      position: 'relative',
      width: '100%'
    }
  } : {};
  var props = as || isVirtual ? {
    ref: containerRef
  } : {};
  return /*#__PURE__*/_react.default.createElement(Container, _extends({}, otherProps, virtualProps, props), content);
}