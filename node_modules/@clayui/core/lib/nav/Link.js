"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Link = void 0;

var _icon = _interopRequireDefault(require("@clayui/icon"));

var _shared = require("@clayui/shared");

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _excluded = ["active", "children", "className", "collapsed", "disabled", "showIcon", "spritemap"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Link = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var _classNames;

  var active = _ref.active,
      children = _ref.children,
      className = _ref.className,
      collapsed = _ref.collapsed,
      disabled = _ref.disabled,
      showIcon = _ref.showIcon,
      spritemap = _ref.spritemap,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react.default.createElement(_shared.LinkOrButton, _extends({}, otherProps, {
    buttonDisplayType: "unstyled",
    buttonType: "button",
    className: (0, _classnames.default)('nav-link', className, (_classNames = {
      active: active
    }, _defineProperty(_classNames, 'collapse-icon', showIcon), _defineProperty(_classNames, "collapsed", collapsed), _defineProperty(_classNames, "disabled", disabled), _classNames)),
    ref: ref
  }), children, showIcon && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
    className: "collapse-icon-closed"
  }, /*#__PURE__*/_react.default.createElement(_icon.default, {
    focusable: "false",
    role: "presentation",
    spritemap: spritemap,
    symbol: "caret-right"
  })), /*#__PURE__*/_react.default.createElement("span", {
    className: "collapse-icon-open"
  }, /*#__PURE__*/_react.default.createElement(_icon.default, {
    focusable: "false",
    role: "presentation",
    spritemap: spritemap,
    symbol: "caret-bottom"
  }))));
});

exports.Link = Link;
Link.displayName = 'NavLink';