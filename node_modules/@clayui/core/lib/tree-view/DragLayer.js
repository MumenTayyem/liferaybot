"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactDnd = require("react-dnd");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * SPDX-FileCopyrightText: Â© 2021 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
var layerStyles = {
  cursor: 'grabbing',
  height: '100%',
  left: 0,
  pointerEvents: 'none',
  position: 'fixed',
  top: 0,
  width: '100%',
  zIndex: 150
};

function getItemStyles(currentOffset) {
  if (!currentOffset) {
    return {
      display: 'none'
    };
  }

  var transform = "translate(".concat(currentOffset.x, "px, ").concat(currentOffset.y, "px)");
  return {
    WebkitTransform: transform,
    transform: transform
  };
}

var DragLayer = function DragLayer(_ref) {
  var itemNameKey = _ref.itemNameKey;

  var _useDragLayer = (0, _reactDnd.useDragLayer)(function (monitor) {
    return {
      currentOffset: monitor.getClientOffset(),
      isDragging: monitor.isDragging(),
      item: monitor.getItem()
    };
  }),
      currentOffset = _useDragLayer.currentOffset,
      isDragging = _useDragLayer.isDragging,
      item = _useDragLayer.item;

  if (!isDragging || item.type !== 'treeViewItem') {
    return null;
  }

  var name = item.item[itemNameKey];
  return /*#__PURE__*/_react.default.createElement("div", {
    style: layerStyles
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "treeview-dragging",
    style: getItemStyles(currentOffset)
  }, name));
};

var _default = DragLayer;
exports.default = _default;