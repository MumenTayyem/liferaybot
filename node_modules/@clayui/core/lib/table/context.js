"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableContext = exports.RowContext = exports.BodyContext = void 0;
exports.useBody = useBody;
exports.useRow = useRow;
exports.useTable = useTable;

var _react = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * SPDX-FileCopyrightText: Â© 2023 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
var TableContext = /*#__PURE__*/_react.default.createContext({});

exports.TableContext = TableContext;

function useTable() {
  return (0, _react.useContext)(TableContext);
}

var RowContext = /*#__PURE__*/_react.default.createContext({
  divider: false,
  isLoading: false,
  key: 0,
  lazy: false,
  level: 1,
  loadMore: function loadMore() {}
});

exports.RowContext = RowContext;

function useRow() {
  return (0, _react.useContext)(RowContext);
}

var BodyContext = /*#__PURE__*/_react.default.createContext({});

exports.BodyContext = BodyContext;

function useBody() {
  return (0, _react.useContext)(BodyContext);
}