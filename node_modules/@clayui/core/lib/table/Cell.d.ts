/**
 * SPDX-FileCopyrightText: Â© 2023 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
export declare const Cell: React.ForwardRefExoticComponent<{
    /**
     * Aligns the text inside the Cell.
     */
    align?: "center" | "left" | "right" | undefined;
    /**
     * Children content to render content.
     */
    children: React.ReactNode;
    /**
     * Sometimes we are unable to remove specific table columns from the DOM
     * and need to hide it using CSS. This property can be added to the "new"
     * first or last cell to maintain table styles on the left and right side.
     */
    delimiter?: "end" | "start" | undefined;
    /**
     * Fills out the remaining space inside a Cell.
     */
    expanded?: boolean | undefined;
    /**
     * Internal property.
     * @ignore
     */
    index?: number | undefined;
    /**
     * Internal property.
     * @ignore
     */
    keyValue?: React.Key | undefined;
    /**
     * Whether the column allows sortable. Only available in the header column.
     */
    sortable?: boolean | undefined;
    /**
     * Aligns horizontally contents inside the Cell.
     */
    textAlign?: "center" | "end" | "start" | undefined;
    /**
     * Truncates the text inside a Cell.
     */
    truncate?: boolean | undefined;
    wrap?: boolean | undefined;
    /**
     * Sets the column width.
     */
    width?: string | undefined;
    /**
     * Sets a text value if the component's content is not plain text.
     */
    textValue?: string | undefined;
    /**
     * @ignore
     */
    UNSAFE_resizable?: boolean | undefined;
    /**
     * @ignore
     */
    UNSAFE_resizerClassName?: string | undefined;
    /**
     * @ignore
     */
    UNSAFE_resizerOnMouseDown?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined;
} & React.ThHTMLAttributes<HTMLTableCellElement> & React.TdHTMLAttributes<HTMLTableCellElement> & React.RefAttributes<HTMLTableCellElement>>;
