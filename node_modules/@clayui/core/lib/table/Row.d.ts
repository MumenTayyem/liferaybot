/**
 * SPDX-FileCopyrightText: Â© 2023 Liferay, Inc. <https://liferay.com>
 * SPDX-License-Identifier: BSD-3-Clause
 */
import React from 'react';
import { ChildrenFunction } from '../collection';
declare type Props<T> = {
    /**
     * Children content to render a dynamic or static content.
     */
    children: React.ReactNode | ChildrenFunction<T, unknown>;
    /**
     * This property can be added to the "new" first
     * or last ClayTable.Row to maintain table styles on the top and bottom sides.
     */
    delimiter?: 'start' | 'end';
    /**
     * Applies a divider style inside the row.
     */
    divider?: boolean;
    /**
     * Property to render content with dynamic data.
     */
    items?: Array<T>;
    /**
     * Internal prop.
     * @ignore
     */
    keyValue?: React.Key;
    /**
     * Flag to indicate that the row has children to be loaded lazily when
     * `onLoadMore` is set.
     */
    lazy?: boolean;
    /**
     * Internal prop.
     * @ignore
     */
    _expandable?: boolean;
    /**
     * Internal prop.
     * posinset
     * @ignore
     */
    _index?: number;
    /**
     * Internal prop.
     * level
     * @ignore
     */
    _level?: number;
    /**
     * Internal prop.
     * setsize
     * @ignore
     */
    _size?: number;
    /**
     * Internal prop.
     * @ignore
     */
    _item?: T;
    /**
     * Internal prop.
     * @ignore
     */
    _loc?: Array<number>;
} & React.HTMLAttributes<HTMLTableRowElement>;
declare type ForwardRef = {
    displayName: string;
    <T>(props: Props<T> & {
        ref?: React.Ref<HTMLTableRowElement>;
    }): JSX.Element;
};
export declare const Row: ForwardRef;
export {};
