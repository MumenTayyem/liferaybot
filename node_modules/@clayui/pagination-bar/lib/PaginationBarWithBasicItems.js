"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClayPaginationBarWithBasicItems = void 0;

var _button = _interopRequireDefault(require("@clayui/button"));

var _core = require("@clayui/core");

var _icon = _interopRequireDefault(require("@clayui/icon"));

var _pagination = require("@clayui/pagination");

var _shared = require("@clayui/shared");

var _react = _interopRequireWildcard(require("react"));

var _PaginationBar = _interopRequireDefault(require("./PaginationBar"));

var _excluded = ["activeDelta", "labels", "spritemap"],
    _excluded2 = ["active", "activeDelta", "activePage", "alignmentPosition", "defaultActive", "deltas", "disabledPages", "disableEllipsis", "ellipsisBuffer", "ellipsisProps", "hrefConstructor", "labels", "onActiveChange", "onDeltaChange", "onPageChange", "showDeltasDropDown", "spritemap", "totalItems"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var defaultDeltas = [{
  label: 10
}, {
  label: 20
}, {
  label: 30
}, {
  label: 50
}];
var DEFAULT_LABELS = {
  itemsPerPagePickerAriaLabel: 'Items Per Page',
  paginationResults: 'Showing {0} to {1} of {2}',
  perPageItems: '{0} items',
  selectPerPageItems: '{0} items'
};

var Trigger = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var activeDelta = _ref.activeDelta,
      labels = _ref.labels,
      spritemap = _ref.spritemap,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/_react.default.createElement(_button.default, _extends({}, otherProps, {
    className: "dropdown-toggle",
    displayType: "unstyled",
    ref: ref
  }), (0, _shared.sub)(labels.perPageItems, [activeDelta]), /*#__PURE__*/_react.default.createElement(_icon.default, {
    spritemap: spritemap,
    symbol: "caret-double-l"
  }));
});

Trigger.displayName = 'Trigger';

var ClayPaginationBarWithBasicItems = function ClayPaginationBarWithBasicItems(_ref2) {
  var active = _ref2.active,
      activeDelta = _ref2.activeDelta,
      activePage = _ref2.activePage,
      alignmentPosition = _ref2.alignmentPosition,
      _ref2$defaultActive = _ref2.defaultActive,
      defaultActive = _ref2$defaultActive === void 0 ? 1 : _ref2$defaultActive,
      _ref2$deltas = _ref2.deltas,
      deltas = _ref2$deltas === void 0 ? defaultDeltas : _ref2$deltas,
      disabledPages = _ref2.disabledPages,
      _ref2$disableEllipsis = _ref2.disableEllipsis,
      disableEllipsis = _ref2$disableEllipsis === void 0 ? false : _ref2$disableEllipsis,
      ellipsisBuffer = _ref2.ellipsisBuffer,
      ellipsisProps = _ref2.ellipsisProps,
      hrefConstructor = _ref2.hrefConstructor,
      _ref2$labels = _ref2.labels,
      labels = _ref2$labels === void 0 ? DEFAULT_LABELS : _ref2$labels,
      onActiveChange = _ref2.onActiveChange,
      onDeltaChange = _ref2.onDeltaChange,
      onPageChange = _ref2.onPageChange,
      _ref2$showDeltasDropD = _ref2.showDeltasDropDown,
      showDeltasDropDown = _ref2$showDeltasDropD === void 0 ? true : _ref2$showDeltasDropD,
      spritemap = _ref2.spritemap,
      totalItems = _ref2.totalItems,
      otherProps = _objectWithoutProperties(_ref2, _excluded2);

  if (totalItems === 0) {
    totalItems = 1;
  }

  var _useControlledState = (0, _shared.useControlledState)({
    defaultName: 'defaultActive',
    defaultValue: defaultActive,
    handleName: 'onActiveChange',
    name: 'value',
    onChange: onActiveChange !== null && onActiveChange !== void 0 ? onActiveChange : onPageChange,
    value: typeof active === 'undefined' ? activePage : active
  }),
      _useControlledState2 = _slicedToArray(_useControlledState, 2),
      internalActive = _useControlledState2[0],
      setActive = _useControlledState2[1];

  labels = _objectSpread(_objectSpread({}, DEFAULT_LABELS), labels);

  if (!activeDelta) {
    activeDelta = deltas[0].label;
  }

  var totalPages = Math.ceil(totalItems / activeDelta);
  (0, _react.useEffect)(function () {
    if (internalActive > totalPages) {
      setActive(1);
    }
  }, [totalPages]);
  var ariaDescribedby = (0, _shared.useId)();
  return /*#__PURE__*/_react.default.createElement(_PaginationBar.default, otherProps, showDeltasDropDown && /*#__PURE__*/_react.default.createElement("div", {
    className: "dropdown pagination-items-per-page"
  }, /*#__PURE__*/_react.default.createElement(_core.Picker, {
    activeDelta: activeDelta,
    "aria-describedby": ariaDescribedby,
    "aria-label": labels.itemsPerPagePickerAriaLabel,
    as: Trigger,
    items: deltas,
    labels: labels,
    onSelectionChange: function onSelectionChange(key) {
      return onDeltaChange && onDeltaChange(Number(key));
    },
    selectedKey: String(activeDelta),
    spritemap: spritemap
  }, function (item) {
    return /*#__PURE__*/_react.default.createElement(_core.Option, {
      key: item.label
    }, (0, _shared.sub)(labels.selectPerPageItems, [String(item.label)]));
  })), /*#__PURE__*/_react.default.createElement(_PaginationBar.default.Results, {
    id: ariaDescribedby
  }, (0, _shared.sub)(labels.paginationResults, [(internalActive - 1) * activeDelta + 1, internalActive * activeDelta < totalItems ? internalActive * activeDelta : totalItems, totalItems])), /*#__PURE__*/_react.default.createElement(_pagination.ClayPaginationWithBasicItems, {
    active: internalActive,
    alignmentPosition: alignmentPosition,
    disableEllipsis: disableEllipsis,
    disabledPages: disabledPages,
    ellipsisBuffer: ellipsisBuffer,
    ellipsisProps: ellipsisProps,
    hrefConstructor: hrefConstructor,
    onActiveChange: setActive,
    spritemap: spritemap,
    totalPages: totalPages
  }));
};

exports.ClayPaginationBarWithBasicItems = ClayPaginationBarWithBasicItems;