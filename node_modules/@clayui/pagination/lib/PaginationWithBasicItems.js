"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClayPaginationWithBasicItems = void 0;

var _icon = _interopRequireDefault(require("@clayui/icon"));

var _shared = require("@clayui/shared");

var _react = _interopRequireDefault(require("react"));

var _Pagination = _interopRequireDefault(require("./Pagination"));

var _excluded = ["active", "activePage", "alignmentPosition", "ariaLabels", "defaultActive", "disabledPages", "disableEllipsis", "ellipsisBuffer", "ellipsisProps", "hrefConstructor", "onActiveChange", "onPageChange", "spritemap", "totalPages"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ELLIPSIS_BUFFER = 2;

var ClayPaginationWithBasicItems = /*#__PURE__*/_react.default.forwardRef(function (_ref, ref) {
  var active = _ref.active,
      activePage = _ref.activePage,
      alignmentPosition = _ref.alignmentPosition,
      _ref$ariaLabels = _ref.ariaLabels,
      ariaLabels = _ref$ariaLabels === void 0 ? {
    link: 'Go to page, {0}',
    next: 'Go to the next page, {0}',
    previous: 'Go to the previous page, {0}'
  } : _ref$ariaLabels,
      defaultActive = _ref.defaultActive,
      _ref$disabledPages = _ref.disabledPages,
      disabledPages = _ref$disabledPages === void 0 ? [] : _ref$disabledPages,
      _ref$disableEllipsis = _ref.disableEllipsis,
      disableEllipsis = _ref$disableEllipsis === void 0 ? false : _ref$disableEllipsis,
      _ref$ellipsisBuffer = _ref.ellipsisBuffer,
      ellipsisBuffer = _ref$ellipsisBuffer === void 0 ? ELLIPSIS_BUFFER : _ref$ellipsisBuffer,
      _ref$ellipsisProps = _ref.ellipsisProps,
      ellipsisProps = _ref$ellipsisProps === void 0 ? {
    'aria-label': 'Show pages {0} through {1}',
    title: 'Show pages {0} through {1}'
  } : _ref$ellipsisProps,
      hrefConstructor = _ref.hrefConstructor,
      onActiveChange = _ref.onActiveChange,
      onPageChange = _ref.onPageChange,
      spritemap = _ref.spritemap,
      totalPages = _ref.totalPages,
      otherProps = _objectWithoutProperties(_ref, _excluded);

  if (totalPages === 0) {
    totalPages = 1;
  }

  var _useControlledState = (0, _shared.useControlledState)({
    defaultName: 'defaultActive',
    defaultValue: defaultActive,
    handleName: 'onActiveChange',
    name: 'value',
    onChange: onActiveChange !== null && onActiveChange !== void 0 ? onActiveChange : onPageChange,
    value: typeof active === 'undefined' ? activePage : active
  }),
      _useControlledState2 = _slicedToArray(_useControlledState, 2),
      internalActive = _useControlledState2[0],
      setActive = _useControlledState2[1];

  var previousPage = internalActive - 1;
  var previousHref = hrefConstructor && hrefConstructor(previousPage);
  var nextPage = internalActive + 1;
  var nextHref = hrefConstructor && hrefConstructor(nextPage);
  var pages = Array(totalPages).fill(0).map(function (_item, index) {
    return index + 1;
  });
  return /*#__PURE__*/_react.default.createElement(_Pagination.default, _extends({}, otherProps, {
    ref: ref
  }), /*#__PURE__*/_react.default.createElement(_Pagination.default.Item, {
    "aria-label": internalActive !== 1 ? (0, _shared.sub)(ariaLabels.previous, [previousPage]) : undefined,
    as: internalActive === 1 ? 'div' : undefined,
    disabled: internalActive === 1,
    href: previousHref,
    onClick: function onClick() {
      return setActive(previousPage);
    },
    role: previousHref || internalActive === 1 ? undefined : 'button'
  }, /*#__PURE__*/_react.default.createElement(_icon.default, {
    spritemap: spritemap,
    symbol: "angle-left"
  })), (ellipsisBuffer ? (0, _shared.getEllipsisItems)({
    EllipsisComponent: _Pagination.default.Ellipsis,
    ellipsisProps: _objectSpread(_objectSpread({}, ellipsisProps), {}, {
      alignmentPosition: alignmentPosition,
      disabled: disableEllipsis,
      disabledPages: disabledPages,
      hrefConstructor: hrefConstructor,
      onPageChange: setActive
    }),
    items: pages
  }, ellipsisBuffer, internalActive - 1) : pages).map(function (page, index) {
    return /*#__PURE__*/_react.default.isValidElement(page) ? /*#__PURE__*/_react.default.cloneElement(page, {
      key: "ellipsis".concat(index)
    }) : /*#__PURE__*/_react.default.createElement(_Pagination.default.Item, {
      active: page === internalActive,
      "aria-label": (0, _shared.sub)(ariaLabels.link, [page]),
      disabled: disabledPages.includes(page),
      href: hrefConstructor && hrefConstructor(page),
      key: page,
      onClick: function onClick() {
        return setActive(page);
      }
    }, page);
  }), /*#__PURE__*/_react.default.createElement(_Pagination.default.Item, {
    "aria-label": internalActive !== totalPages ? (0, _shared.sub)(ariaLabels.next, [nextPage]) : undefined,
    as: internalActive === totalPages ? 'div' : undefined,
    disabled: internalActive === totalPages,
    href: nextHref,
    onClick: function onClick() {
      return setActive(nextPage);
    },
    role: nextHref || internalActive === totalPages ? undefined : 'button'
  }, /*#__PURE__*/_react.default.createElement(_icon.default, {
    spritemap: spritemap,
    symbol: "angle-right"
  })));
});

exports.ClayPaginationWithBasicItems = ClayPaginationWithBasicItems;
ClayPaginationWithBasicItems.displayName = 'ClayPaginationWithBasicItems';